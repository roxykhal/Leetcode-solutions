class Solution {
    public int findMin(int[] nums) {
        
        int left = 0; //starting from left to right
        int right = nums.length -1;
        int ans = nums[0]; = intiailised to 0
        
        if(nums.length == 1){  //if theres only one number assume that its the smallest 
            return nums[0];
        }
        
        while(left<=right){  //loop that contains aws long as left is smaller than right, ans will update ans to hold smallest value so far
            if(nums[left] < nums[right]){
                ans = Math.min(ans, nums[left]);
            }
            int mid = (left+right)/2; //middle index between left and right
            
            ans = Math.min(ans, nums[mid]); 
            if(nums[left] <= nums[mid]){
                left = mid+1; //mid +1 is to the right side
            }
            else{
                right = mid-1;
            }
        }
        
        return ans;
        
    }
}
